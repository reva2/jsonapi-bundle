<?xml version="1.0" encoding="UTF-8"?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <service id="reva2_jsonapi.service" class="Reva2\JsonApi\Services\JsonApiService" public="true">
            <argument index="0" type="service" id="reva2_jsonapi.factory" />
            <argument index="1" type="service" id="reva2_jsonapi.registry" />
            <argument index="2" type="service" id="reva2_jsonapi.schemas_container" />
            <argument index="3" type="service" id="reva2_jsonapi.data_parser" />
            <argument index="4" type="service" id="reva2_jsonapi.validator" />
        </service>

        <service id="reva2_jsonapi.factory" class="Reva2\JsonApi\Factories\Factory" />

        <service id="reva2_jsonapi.callback_resolver" class="Reva2\JsonApiBundle\CallbackResolver">
            <argument type="service" id="service_container" />
        </service>

        <service id="reva2_jsonapi.data_parser" class="Reva2\JsonApi\Decoders\DataParser">
            <argument index="0" type="service" id="reva2_jsonapi.metadata_factory" />
            <argument index="1" type="service" id="reva2_jsonapi.callback_resolver" />
        </service>

        <service id="reva2_jsonapi.validator" class="Reva2\JsonApi\Services\ValidationService">
            <argument type="service" id="validator" />
        </service>

        <service id="reva2_jsonapi.metadata_factory" class="Reva2\JsonApi\Decoders\Mapping\Factory\LazyMetadataFactory">
            <argument index="0" type="service" id="reva2_jsonapi.metadata_loader" />
            <argument index="1" type="service" id="reva2_jsonapi.metadata_cache" />
        </service>

        <service id="reva2_jsonapi.metadata_cache" class="Reva2\JsonApi\Decoders\Mapping\Cache\PsrCache">
            <argument index="0" type="service" id="reva2_jsonapi.cache" />
        </service>

        <service id="reva2_jsonapi.metadata_loader" class="Reva2\JsonApi\Decoders\Mapping\Loader\AttributeLoader" />

        <service id="reva2_jsonapi.registry" class="Reva2\JsonApi\Services\JsonApiRegistry" />

        <service id="reva2_jsonapi.jsonapi_encoder" class="Reva2\JsonApi\Encoder\Encoder">
            <argument index="0" type="service" id="reva2_jsonapi.factory" />
            <argument index="1" type="service" id="reva2_jsonapi.schemas_container" />
            <tag name="reva2_jsonapi.encoder" alias="jsonapi" />
        </service>

        <service id="reva2_jsonapi.jsonapi_decoder" class="Reva2\JsonApi\Decoders\RequestDecoder">
            <argument type="service" id="reva2_jsonapi.data_parser" />
            <tag name="reva2_jsonapi.decoder" alias="jsonapi" />
        </service>

        <service id="reva2_jsonapi.schemas_container" class="Reva2\JsonApi\Schema\Container">
            <argument index="0" type="service" id="reva2_jsonapi.factory" />
        </service>

        <service id="reva2_jsonapi.cache_adapter_void" class="Symfony\Component\Cache\Adapter\ArrayAdapter" />
        <service id="reva2_jsonapi.cache_adapter_filesystem" class="Symfony\Component\Cache\Adapter\FilesystemAdapter" />

        <service id="reva2_jsonapi.listener" class="Reva2\JsonApi\EventListener\ApiListener">
            <argument index="0" type="service" id="reva2_jsonapi.factory" />
            <tag name="kernel.event_subscriber" />
        </service>

        <service id="reva2_jsonapi.exception_listener" class="Reva2\JsonApiBundle\EventListener\ExceptionListener">
            <argument index="0" type="service" id="reva2_jsonapi.jsonapi_encoder" />
            <tag name="kernel.event_listener" event="kernel.exception" />
        </service>

        <service id="Reva2\JsonApi\Factories\Factory" alias="reva2_jsonapi.factory" />
        <service id="Neomerx\JsonApi\Contracts\Factories\FactoryInterface" alias="reva2_jsonapi.factory" />

        <service id="Reva2\JsonApi\Contracts\Services\JsonApiServiceInterface" alias="reva2_jsonapi.service" public="true" />
        <service id="Neomerx\JsonApi\Contracts\Encoder\EncoderInterface" alias="reva2_jsonapi.jsonapi_encoder" public="true" />
    </services>
</container>